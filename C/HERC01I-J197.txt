                        HH        HH  EEEEEEEEEEEE  RRRRRRRRRRR    CCCCCCCCCC     00000000         11        IIIIIIIIII
                       HH        HH  EEEEEEEEEEEE  RRRRRRRRRRRR  CCCCCCCCCCCC   0000000000       111        IIIIIIIIII
                      HH        HH  EE            RR        RR  CC        CC  00      0000     1111            II
                     HH        HH  EE            RR        RR  CC            00     00 00       11            II
                    HH        HH  EE            RR        RR  CC            00    00  00       11            II
                   HHHHHHHHHHHH  EEEEEEEE      RRRRRRRRRRRR  CC            00   00   00       11            II
                  HHHHHHHHHHHH  EEEEEEEE      RRRRRRRRRRR   CC            00  00    00       11            II
                 HH        HH  EE            RR    RR      CC            00 00     00       11            II
                HH        HH  EE            RR     RR     CC            0000      00       11            II
               HH        HH  EE            RR      RR    CC        CC  000       00       11            II
              HH        HH  EEEEEEEEEEEE  RR       RR   CCCCCCCCCCCC   0000000000    1111111111    IIIIIIIIII
             HH        HH  EEEEEEEEEEEE  RR        RR   CCCCCCCCCC     00000000     1111111111    IIIIIIIIII

                    JJJJJJJJJJ       11        9999999999   777777777777                               AAAAAAAAAA
                    JJJJJJJJJJ      111       999999999999  77777777777                               AAAAAAAAAAAA
                        JJ         1111       99        99  77      77                                AA        AA
                        JJ           11       99        99         77                                 AA        AA
                        JJ           11       99        99        77                                  AA        AA
                        JJ           11       999999999999       77                                   AAAAAAAAAAAA
                        JJ           11       999999999999       77                                   AAAAAAAAAAAA
                        JJ           11                 99       77                                   AA        AA
                  JJ    JJ           11                 99       77                                   AA        AA
                  JJ    JJ           11       99        99       77                                   AA        AA
                  JJJJJJJJ       1111111111   999999999999       77                                   AA        AA
                   JJJJJJ        1111111111    9999999999        77                                   AA        AA

****A  START  JOB  197  HERC01I                         ROOM        2.13.18 AM 15 JAN  7  PRINTER1  SYS BSP1  JOB  197  START  A****
****A  START  JOB  197  HERC01I                         ROOM        2.13.18 AM 15 JAN  7  PRINTER1  SYS BSP1  JOB  197  START  A****
****A  START  JOB  197  HERC01I                         ROOM        2.13.18 AM 15 JAN  7  PRINTER1  SYS BSP1  JOB  197  START  A****
****A  START  JOB  197  HERC01I                         ROOM        2.13.18 AM 15 JAN  7  PRINTER1  SYS BSP1  JOB  197  START  A****

                                                J E S 2   J O B   L O G
02.13.17 JOB  197  IEF677I WARNING MESSAGE(S) FOR JOB HERC01I  ISSUED
02.13.17 JOB  197  $HASP373 HERC01I  STARTED - INIT  1 - CLASS A - SYS BSP1
02.13.17 JOB  197  IEF403I HERC01I - STARTED - TIME=02.13.17
02.13.17 JOB  197  IEFACTRT - Stepname  Procstep  Program   Retcode
02.13.17 JOB  197  HERC01I    IDCAMS              IDCAMS    RC= 0000
02.13.17 JOB  197  HERC01I    STEP1               IEBUPDTE  RC= 0000
02.13.17 JOB  197  HERC01I    STEP2               IEBGENER  RC= 0000
02.13.17 JOB  197  HERC01I    STEP3               IEBUPDTE  RC= 0000
02.13.17 JOB  197  HERC01I    STEP4     ASM       IFOX00    RC= 0000
02.13.17 JOB  197  HERC01I    STEP4     LKED      IEWL      RC= 0000
02.13.18 JOB  197  HERC01I    STEP5     COB       IKFCBL00  RC= 0000
02.13.18 JOB  197  HERC01I    STEP5     LKED      IEWL      RC= 0000
02.13.18 JOB  197  HERC01I    STEP6     COB       IKFCBL00  RC= 0000
02.13.18 JOB  197  HERC01I    STEP6     LKED      IEWL      RC= 0000
02.13.18 JOB  197  IEF404I HERC01I - ENDED - TIME=02.13.18
02.13.18 JOB  197  $HASP395 HERC01I  ENDED

------ JES2 JOB STATISTICS ------

 15 JAN  7 JOB EXECUTION DATE

       356 CARDS READ

     1,329 SYSOUT PRINT RECORDS

         0 SYSOUT PUNCH RECORDS

      0.02 MINUTES EXECUTION TIME

    1     //HERC01I JOB MSGCLASS=A,MSGLEVEL=(1,1),NOTIFY=HERC01                   JOB  197
          ***                                                                     00000020
          ***   INSTALL THE DYNALOAD SUBROUTINE AND TEST MODULES                  00000030
          ***                                                                     00000040
          ***  FIRST - DELETE ANY EXISTING PDS FILES                              00000050
          ***                                                                     00000060
    2     //IDCAMS  EXEC PGM=IDCAMS                                               00000070
    3     //SYSPRINT DD SYSOUT=*                                                  00000080
    4     //SYSIN    DD *                                                         00000090
          ***                                                                     00000140
          ***   NOW - CREATE THE PDS FOR THE ASM SOURCE CODE                      00000150
          ***                                                                     00000160
    5     //STEP1   EXEC PGM=IEBUPDTE,PARM=NEW,COND=(0,NE)                        00000170
    6     //SYSUT2   DD DSN=HERC01.DYNALOAD.ASM,DISP=(NEW,CATLG,DELETE),          00000180
          //         UNIT=DISK,SPACE=(TRK,(1,1,1)),VOL=SER=PUB002,                00000190
          //         DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120,DSORG=PO)                00000200
    7     //SYSPRINT DD SYSOUT=*                                                  00000210
    8     //SYSIN    DD *                                                         00000220
          ***                                                                     00002200
          ***  NOW - STRIP OFF THE SEQUENCE NUMBERS IN POSITIONS 73-80            00002210
          ***  OF THE COBOL TEST CODE                                             00002220
          ***                                                                     00002230
    9     //STEP2   EXEC PGM=IEBGENER,COND=(0,NE)                                 00002240
   10     //SYSUT2   DD DSN=&&COBOL,DISP=(NEW,PASS,DELETE),                       00002250
          //         UNIT=SYSDA,SPACE=(TRK,(5,5)),                                00002260
          //         DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)                         00002270
   11     //SYSPRINT DD SYSOUT=*                                                  00002280
   12     //SYSIN  DD *                                                           00002290
   13     //SYSUT1   DD *                                                         00002320
          ***                                                                     00003240
          ***  NOW - ADD THE COBOL TEST MODULES TO A PDS                          00003250
          ***                                                                     00003260
   14     //STEP3   EXEC PGM=IEBUPDTE,PARM=NEW,COND=(0,NE)                        00003270
   15     //SYSUT2   DD DSN=HERC01.DYNALOAD.COBOL,DISP=(NEW,CATLG,DELETE),        00003280
          //         UNIT=DISK,SPACE=(TRK,(1,1,1)),VOL=SER=PUB002,                00003290
          //         DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120,DSORG=PO)                00003300
   16     //SYSPRINT DD SYSOUT=*                                                  00003310
   17     //SYSIN    DD DSN=&&COBOL,DISP=(OLD,PASS)                               00003320
          ***                                                                     00003330
          ***  NOW ASSEMBLE AND LINK THE DYNALOAD ROUTINE                         00003340
          ***                                                                     00003350
   18     //STEP4 EXEC ASMFCL,PARM.ASM='OBJ,NODECK'                               00003360
   19     XXASMFCL   PROC MAC='SYS1.MACLIB',MAC1='SYS1.MACLIB'                    00050000
   20     XXASM      EXEC PGM=IFOX00,PARM=OBJ,REGION=128K                         00100000
   21     XXSYSLIB   DD   DSN=&MAC,DISP=SHR                                       00150000
   22     XX         DD   DSN=&MAC1,DISP=SHR                                      00200000
   23     XXSYSUT1   DD   DSN=&&SYSUT1,UNIT=SYSSQ,SPACE=(1700,(600,100)),         00250000
          XX             SEP=(SYSLIB)                                             00300000
   24     XXSYSUT2   DD   DSN=&&SYSUT2,UNIT=SYSSQ,SPACE=(1700,(300,50)),          00350000
          XX             SEP=(SYSLIB,SYSUT1)                                      00400000
   25     XXSYSUT3   DD   DSN=&&SYSUT3,UNIT=SYSSQ,SPACE=(1700,(300,50))           00450000
   26     XXSYSPRINT DD   SYSOUT=A,DCB=BLKSIZE=1089                               00500000
   27     XXSYSPUNCH DD   SYSOUT=B                                                00550000
   28     XXSYSGO    DD   DSN=&&OBJSET,UNIT=SYSSQ,SPACE=(80,(200,50)),            00600000
          XX             DISP=(MOD,PASS)                                          00650000
   29     //ASM.SYSIN DD DSN=HERC01.DYNALOAD.ASM(DYNALOAD),DISP=SHR               00003370
   30     XXLKED     EXEC PGM=IEWL,PARM=(XREF,LET,LIST,NCAL),REGION=128K,         00700000
          XX             COND=(8,LT,ASM)                                          00750000
   31     XXSYSLIN   DD   DSN=&&OBJSET,DISP=(OLD,DELETE)                          00800000
   32     XX         DD   DDNAME=SYSIN                                            00850000
   33     //LKED.SYSLMOD DD DSN=HERC01.DYNALOAD.LOADLIB(DYNALOAD),                00003380
          //         DISP=(NEW,CATLG,DELETE),                                     00003390
          //         UNIT=DISK,VOL=SER=PUB002,                                    00003400
          //         SPACE=(TRK,(2,2,2),RLSE),                                    00003410
          //         DCB=(RECFM=U,BLKSIZE=19069,DSORG=PO)                         00003420
          ***                                                                     00003430
          ***  NOW COMPILE THE COBOL DRIVER ROUTINE                               00003440
          ***                                                                     00003450
          X/SYSLMOD  DD   DSN=&&GOSET(GO),UNIT=SYSDA,SPACE=(1024,(50,20,1)),      00900000
          XX             DISP=(MOD,PASS)                                          00950000
   34     XXSYSUT1   DD   DSN=&&SYSUT1,UNIT=(SYSDA,SEP=(SYSLIN,SYSLMOD)),         01000000
          XX             SPACE=(1024,(50,20))                                     01050000
   35     XXSYSPRINT DD   SYSOUT=A                                                01100000
   36     //STEP5 EXEC COBUCL                                                     00003460
   37     XXCOBUCL  PROC SOUT='*',                                                00010000
          XX           SUPMAP=,                                                   00020000
          XX           SIZE=2048K,                                                00030000
          XX           BUF=1024K,                                                 00040000
          XX           WORK='460,(700,100)', COMPILER SYSUT- SPACE                00050000
          XX           TEMP='TRK,(10,10)',   TEMP OBJ SPACE                       00060000
          XX           XREF=NO,     DATA NAME/PROCEDURE NAME CROSS REF            00070000
          XX           DMAP=NO,     DATA MAP                                      00080000
          XX           PMAP=NO,     PROCEDURE DIVISION MAP                        00090000
          XX           CLIST=,      CONDENSED LISTING                             00100000
          XX           LIB=NO,      PROCESS COPY BOOKS (NO/LIB)                   00110000
          XX           CAL=CAL      LKED CAL OR NCAL                              00120000
          ***                                                                     00130000
   38     XXCOB  EXEC  PGM=IKFCBL00,REGION=4096K,                                 00140000
          XX PARM=('NODECK,LOAD,&SUPMAP.SUPMAP,SIZE=&SIZE,BUF=&BUF,',             00150000
          XX       '&LIB.LIB,&PMAP.PMAP,&DMAP.DMAP,&XREF.XREF,&CLIST.CLIST')      00160000
   39     XXSYSLIB  DD  DSN=SYS1.USRCOPY.COBOL,DISP=SHR,DCB=BLKSIZE=3200          00170000
   40     XXSYSUT1  DD  UNIT=SYSDA,SPACE=(&WORK)                                  00180000
   41     XXSYSUT2  DD  UNIT=SYSDA,SPACE=(&WORK)                                  00190000
   42     XXSYSUT3  DD  UNIT=SYSDA,SPACE=(&WORK)                                  00200000
   43     XXSYSUT4  DD  UNIT=SYSDA,SPACE=(&WORK)                                  00210000
   44     XXSYSLIN  DD DSN=&&COBOBJ,DISP=(NEW,PASS),                              00220000
          XX           UNIT=SYSDA,SPACE=(&TEMP,RLSE),                             00230000
          XX           DCB=(RECFM=F,LRECL=80,BLKSIZE=80)                          00240000
   45     XXSYSPRINT DD SYSOUT=&SOUT                                              00250000
   46     XXSYSPUNCH DD DUMMY                                                     00260000
   47     //COB.SYSIN DD DSN=HERC01.DYNALOAD.COBOL(TESTDYNA),DISP=SHR             00003470
          X/SYSIN   DD DUMMY                                                      00270000
          ***                                                                     00280000
   48     XXLKED  EXEC PGM=IEWL,REGION=128K,COND=(4,LE,COB),                      00290000
          XX           PARM='LIST,XREF,LET,&CAL'                                  00300000
   49     XXSYSPRINT DD SYSOUT=&SOUT                                              00310000
   50     XXSYSLIN  DD  DSN=&&COBOBJ,DISP=(OLD,DELETE)                            00320000
   51     XX        DD  DDNAME=SYSIN                                              00330000
   52     XXSYSUT1  DD  UNIT=SYSDA,SPACE=(&TEMP)                                  00340000
   53     //LKED.SYSLIB DD                                                        00003480
          X/SYSLIB  DD DSN=SYS1.COBLIB,DISP=SHR,DCB=BUFSIZE=19069                 00350000
   54     //        DD DSN=HERC01.DYNALOAD.LOADLIB,DISP=SHR                       00003490
          X/        DD DSN=SYS1.USRSUBS.LOADLIB,DISP=SHR                          00360000
   55     //LKED.SYSLMOD DD DSN=HERC01.DYNALOAD.LOADLIB(TESTDYNA),DISP=SHR        00003500
          ***                                                                     00003510
          ***  NOW COMPILE THE COBOL TEST SUBROUTINE                              00003520
          ***                                                                     00003530
          X/SYSLMOD DD DUMMY                                                      00370000
   56     XXSYSIN   DD DUMMY                                                      00380000
   57     //STEP6 EXEC COBUCL                                                     00003540
   58     XXCOBUCL  PROC SOUT='*',                                                00010000
          XX           SUPMAP=,                                                   00020000
          XX           SIZE=2048K,                                                00030000
          XX           BUF=1024K,                                                 00040000
          XX           WORK='460,(700,100)', COMPILER SYSUT- SPACE                00050000
          XX           TEMP='TRK,(10,10)',   TEMP OBJ SPACE                       00060000
          XX           XREF=NO,     DATA NAME/PROCEDURE NAME CROSS REF            00070000
          XX           DMAP=NO,     DATA MAP                                      00080000
          XX           PMAP=NO,     PROCEDURE DIVISION MAP                        00090000
          XX           CLIST=,      CONDENSED LISTING                             00100000
          XX           LIB=NO,      PROCESS COPY BOOKS (NO/LIB)                   00110000
          XX           CAL=CAL      LKED CAL OR NCAL                              00120000
          ***                                                                     00130000
   59     XXCOB  EXEC  PGM=IKFCBL00,REGION=4096K,                                 00140000
          XX PARM=('NODECK,LOAD,&SUPMAP.SUPMAP,SIZE=&SIZE,BUF=&BUF,',             00150000
          XX       '&LIB.LIB,&PMAP.PMAP,&DMAP.DMAP,&XREF.XREF,&CLIST.CLIST')      00160000
   60     XXSYSLIB  DD  DSN=SYS1.USRCOPY.COBOL,DISP=SHR,DCB=BLKSIZE=3200          00170000
   61     XXSYSUT1  DD  UNIT=SYSDA,SPACE=(&WORK)                                  00180000
   62     XXSYSUT2  DD  UNIT=SYSDA,SPACE=(&WORK)                                  00190000
   63     XXSYSUT3  DD  UNIT=SYSDA,SPACE=(&WORK)                                  00200000
   64     XXSYSUT4  DD  UNIT=SYSDA,SPACE=(&WORK)                                  00210000
   65     XXSYSLIN  DD DSN=&&COBOBJ,DISP=(NEW,PASS),                              00220000
          XX           UNIT=SYSDA,SPACE=(&TEMP,RLSE),                             00230000
          XX           DCB=(RECFM=F,LRECL=80,BLKSIZE=80)                          00240000
   66     XXSYSPRINT DD SYSOUT=&SOUT                                              00250000
   67     XXSYSPUNCH DD DUMMY                                                     00260000
   68     //COB.SYSIN DD DSN=HERC01.DYNALOAD.COBOL(TESTDYN1),DISP=SHR             00003550
          X/SYSIN   DD DUMMY                                                      00270000
          ***                                                                     00280000
   69     XXLKED  EXEC PGM=IEWL,REGION=128K,COND=(4,LE,COB),                      00290000
          XX           PARM='LIST,XREF,LET,&CAL'                                  00300000
   70     XXSYSPRINT DD SYSOUT=&SOUT                                              00310000
   71     XXSYSLIN  DD  DSN=&&COBOBJ,DISP=(OLD,DELETE)                            00320000
   72     XX        DD  DDNAME=SYSIN                                              00330000
   73     XXSYSUT1  DD  UNIT=SYSDA,SPACE=(&TEMP)                                  00340000
   74     XXSYSLIB  DD DSN=SYS1.COBLIB,DISP=SHR,DCB=BUFSIZE=19069                 00350000
   75     XX        DD DSN=SYS1.USRSUBS.LOADLIB,DISP=SHR                          00360000
   76     //LKED.SYSLMOD DD DSN=HERC01.DYNALOAD.LOADLIB(TESTDYN1),DISP=SHR        00003560
          X/SYSLMOD DD DUMMY                                                      00370000
   77     XXSYSIN   DD DUMMY                                                      00380000

 STMT NO. MESSAGE
-
   21     IEF653I SUBSTITUTION JCL - DSN=SYS1.MACLIB,DISP=SHR
   22     IEF653I SUBSTITUTION JCL - DSN=SYS1.MACLIB,DISP=SHR
   38     IEF653I SUBSTITUTION JCL - PARM=('NODECK,LOAD,SUPMAP,SIZE=2048K,BUF=1024K,',
   38     IEF653I SUBSTITUTION JCL - 'NOLIB,NOPMAP,NODMAP,NOXREF,CLIST')
   40     IEF653I SUBSTITUTION JCL - UNIT=SYSDA,SPACE=(460,(700,100))
   41     IEF653I SUBSTITUTION JCL - UNIT=SYSDA,SPACE=(460,(700,100))
   42     IEF653I SUBSTITUTION JCL - UNIT=SYSDA,SPACE=(460,(700,100))
   43     IEF653I SUBSTITUTION JCL - UNIT=SYSDA,SPACE=(460,(700,100))
   44     IEF653I SUBSTITUTION JCL - UNIT=SYSDA,SPACE=(TRK,(10,10),RLSE),
   45     IEF653I SUBSTITUTION JCL - SYSOUT=*
   48     IEF653I SUBSTITUTION JCL - PARM='LIST,XREF,LET,CAL'
   49     IEF653I SUBSTITUTION JCL - SYSOUT=*
   52     IEF653I SUBSTITUTION JCL - UNIT=SYSDA,SPACE=(TRK,(10,10))
   59     IEF653I SUBSTITUTION JCL - PARM=('NODECK,LOAD,SUPMAP,SIZE=2048K,BUF=1024K,',
   59     IEF653I SUBSTITUTION JCL - 'NOLIB,NOPMAP,NODMAP,NOXREF,CLIST')
   61     IEF653I SUBSTITUTION JCL - UNIT=SYSDA,SPACE=(460,(700,100))
   62     IEF653I SUBSTITUTION JCL - UNIT=SYSDA,SPACE=(460,(700,100))
   63     IEF653I SUBSTITUTION JCL - UNIT=SYSDA,SPACE=(460,(700,100))
   64     IEF653I SUBSTITUTION JCL - UNIT=SYSDA,SPACE=(460,(700,100))
   65     IEF653I SUBSTITUTION JCL - UNIT=SYSDA,SPACE=(TRK,(10,10),RLSE),
   66     IEF653I SUBSTITUTION JCL - SYSOUT=*
   69     IEF653I SUBSTITUTION JCL - PARM='LIST,XREF,LET,CAL'
   70     IEF653I SUBSTITUTION JCL - SYSOUT=*
   73     IEF653I SUBSTITUTION JCL - UNIT=SYSDA,SPACE=(TRK,(10,10))
   36     IEF686I DDNAME REFERRED TO ON DDNAME KEYWORD IN PRIOR STEP WAS NOT RESOLVED
IEF236I ALLOC. FOR HERC01I IDCAMS
IEF237I JES2 ALLOCATED TO SYSPRINT
IEF237I JES2 ALLOCATED TO SYSIN
IEF237I 240  ALLOCATED TO SYS00002
IEF142I HERC01I IDCAMS - STEP WAS EXECUTED - COND CODE 0000
IEF285I   JES2.JOB00197.SO0105                         SYSOUT
IEF285I   JES2.JOB00197.SI0101                         SYSIN
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF373I STEP /IDCAMS  / START 07015.0213
IEF374I STEP /IDCAMS  / STOP  07015.0213 CPU    0MIN 00.09SEC SRB    0MIN 00.01SEC VIRT   204K SYS   248K
************************************************************************************************************************************
*     1. Jobstep of job: HERC01I     Stepname: IDCAMS      Program name: IDCAMS     Executed on 15.01.07 from 02.13.17 to 02.13.17 *
*         elapsed time  24:00:00,13                      CPU-Identifier:  BSP1           Page-in:      0                           *
*             CPU time  00:00:00,10               Virtual Storage used:    204K         Page-out:      0                           *
*           corr. CPU:  00:00:00,10   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      4                                                                           *
*     DMY.......0 DMY.......0 240.......0                                                                                          *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,16                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR HERC01I STEP1
IEF237I 280  ALLOCATED TO SYSUT2
IEF237I 240  ALLOCATED TO SYS00028
IEF237I JES2 ALLOCATED TO SYSPRINT
IEF237I JES2 ALLOCATED TO SYSIN
IEF142I HERC01I STEP1 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   HERC01.DYNALOAD.ASM                          CATALOGED     *--------8
IEF285I   VOL SER NOS= PUB002.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   JES2.JOB00197.SO0106                         SYSOUT
IEF285I   JES2.JOB00197.SI0102                         SYSIN
IEF373I STEP /STEP1   / START 07015.0213
IEF374I STEP /STEP1   / STOP  07015.0213 CPU    0MIN 00.03SEC SRB    0MIN 00.00SEC VIRT    32K SYS   200K
************************************************************************************************************************************
*     2. Jobstep of job: HERC01I     Stepname: STEP1       Program name: IEBUPDTE   Executed on 15.01.07 from 02.13.17 to 02.13.17 *
*         elapsed time  24:00:00,06                      CPU-Identifier:  BSP1           Page-in:      0                           *
*             CPU time  00:00:00,03               Virtual Storage used:     32K         Page-out:      0                           *
*           corr. CPU:  00:00:00,03   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:    197                                                                           *
*     280.......8 240.......0 DMY.......0 DMY.......0                                                                              *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,05                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR HERC01I STEP2
IEF237I 151  ALLOCATED TO SYSUT2
IEF237I JES2 ALLOCATED TO SYSPRINT
IEF237I JES2 ALLOCATED TO SYSIN
IEF237I JES2 ALLOCATED TO SYSUT1
IEF142I HERC01I STEP2 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   SYS07015.T021317.RA000.HERC01I.COBOL         PASSED        *--------3
IEF285I   VOL SER NOS= SPOOL0.
IEF285I   JES2.JOB00197.SO0107                         SYSOUT
IEF285I   JES2.JOB00197.SI0103                         SYSIN
IEF285I   JES2.JOB00197.SI0104                         SYSIN
IEF373I STEP /STEP2   / START 07015.0213
IEF374I STEP /STEP2   / STOP  07015.0213 CPU    0MIN 00.03SEC SRB    0MIN 00.00SEC VIRT    44K SYS   188K
************************************************************************************************************************************
*     3. Jobstep of job: HERC01I     Stepname: STEP2       Program name: IEBGENER   Executed on 15.01.07 from 02.13.17 to 02.13.17 *
*         elapsed time  24:00:00,07                      CPU-Identifier:  BSP1           Page-in:      0                           *
*             CPU time  00:00:00,03               Virtual Storage used:     44K         Page-out:      0                           *
*           corr. CPU:  00:00:00,03   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:     93                                                                           *
*     151.......3 DMY.......0 DMY.......0 DMY.......0                                                                              *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,05                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR HERC01I STEP3
IEF237I 280  ALLOCATED TO SYSUT2
IEF237I 240  ALLOCATED TO SYS00029
IEF237I JES2 ALLOCATED TO SYSPRINT
IEF237I 151  ALLOCATED TO SYSIN
IEF142I HERC01I STEP3 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   HERC01.DYNALOAD.COBOL                        CATALOGED     *--------9
IEF285I   VOL SER NOS= PUB002.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   JES2.JOB00197.SO0108                         SYSOUT
IEF285I   SYS07015.T021317.RA000.HERC01I.COBOL         PASSED        *--------4
IEF285I   VOL SER NOS= SPOOL0.
IEF373I STEP /STEP3   / START 07015.0213
IEF374I STEP /STEP3   / STOP  07015.0213 CPU    0MIN 00.03SEC SRB    0MIN 00.00SEC VIRT    36K SYS   188K
************************************************************************************************************************************
*     4. Jobstep of job: HERC01I     Stepname: STEP3       Program name: IEBUPDTE   Executed on 15.01.07 from 02.13.17 to 02.13.17 *
*         elapsed time  24:00:00,07                      CPU-Identifier:  BSP1           Page-in:      0                           *
*             CPU time  00:00:00,03               Virtual Storage used:     36K         Page-out:      0                           *
*           corr. CPU:  00:00:00,03   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     280.......9 240.......0 DMY.......0 151.......4                                                                              *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,05                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR HERC01I ASM STEP4
IEF237I 148  ALLOCATED TO SYSLIB
IEF237I 148  ALLOCATED TO
IEF237I 14A  ALLOCATED TO SYSUT1
IEF237I 170  ALLOCATED TO SYSUT2
IEF237I 149  ALLOCATED TO SYSUT3
IEF237I JES2 ALLOCATED TO SYSPRINT
IEF237I JES2 ALLOCATED TO SYSPUNCH
IEF237I 340  ALLOCATED TO SYSGO
IEF237I 280  ALLOCATED TO SYSIN
IEF237I 240  ALLOCATED TO SYS00031
IEF142I HERC01I ASM STEP4 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   SYS1.MACLIB                                  KEPT          *-------14
IEF285I   VOL SER NOS= MVSRES.
IEF285I   SYS1.MACLIB                                  KEPT          *--------0
IEF285I   VOL SER NOS= MVSRES.
IEF285I   SYS07015.T021317.RA000.HERC01I.SYSUT1        DELETED       *-------79
IEF285I   VOL SER NOS= SMP002.
IEF285I   SYS07015.T021317.RA000.HERC01I.SYSUT2        DELETED       *-------21
IEF285I   VOL SER NOS= WORK01.
IEF285I   SYS07015.T021317.RA000.HERC01I.SYSUT3        DELETED       *--------8
IEF285I   VOL SER NOS= SMP001.
IEF285I   JES2.JOB00197.SO0109                         SYSOUT
IEF285I   JES2.JOB00197.SO0110                         SYSOUT
IEF285I   SYS07015.T021317.RA000.HERC01I.OBJSET        PASSED        *--------9
IEF285I   VOL SER NOS= CBT000.
IEF285I   HERC01.DYNALOAD.ASM                          KEPT          *--------6
IEF285I   VOL SER NOS= PUB002.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF373I STEP /ASM     / START 07015.0213
IEF374I STEP /ASM     / STOP  07015.0213 CPU    0MIN 00.21SEC SRB    0MIN 00.02SEC VIRT   128K SYS   192K
************************************************************************************************************************************
*     5. Jobstep of job: HERC01I     Stepname: ASM         Program name: IFOX00     Executed on 15.01.07 from 02.13.17 to 02.13.17 *
*         elapsed time  24:00:00,35                      CPU-Identifier:  BSP1           Page-in:      0                           *
*             CPU time  00:00:00,23               Virtual Storage used:    128K         Page-out:      0                           *
*           corr. CPU:  00:00:00,23   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     148......14 148.......0 14A......79 170......21 149.......8 DMY.......0 DMY.......0 340.......9 280.......6 240.......0      *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,38                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR HERC01I LKED STEP4
IEF237I 340  ALLOCATED TO SYSLIN
IEF237I DMY  ALLOCATED TO
IEF237I 280  ALLOCATED TO SYSLMOD
IEF237I 240  ALLOCATED TO SYS00032
IEF237I 14A  ALLOCATED TO SYSUT1
IEF237I JES2 ALLOCATED TO SYSPRINT
IEF142I HERC01I LKED STEP4 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   SYS07015.T021317.RA000.HERC01I.OBJSET        DELETED       *-------10
IEF285I   VOL SER NOS= CBT000.
IEF285I   HERC01.DYNALOAD.LOADLIB                      CATALOGED     *--------9
IEF285I   VOL SER NOS= PUB002.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   SYS07015.T021317.RA000.HERC01I.SYSUT1        DELETED       *--------0
IEF285I   VOL SER NOS= SMP002.
IEF285I   JES2.JOB00197.SO0111                         SYSOUT
IEF373I STEP /LKED    / START 07015.0213
IEF374I STEP /LKED    / STOP  07015.0213 CPU    0MIN 00.03SEC SRB    0MIN 00.01SEC VIRT   128K SYS   188K
************************************************************************************************************************************
*     6. Jobstep of job: HERC01I     Stepname: LKED        Program name: IEWL       Executed on 15.01.07 from 02.13.17 to 02.13.17 *
*         elapsed time  24:00:00,10                      CPU-Identifier:  BSP1           Page-in:      0                           *
*             CPU time  00:00:00,04               Virtual Storage used:    128K         Page-out:      0                           *
*           corr. CPU:  00:00:00,04   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     340......10 DMY.......0 280.......9 240.......0 14A.......0 DMY.......0                                                      *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,06                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR HERC01I COB STEP5
IEF237I 280  ALLOCATED TO SYSLIB
IEF237I 151  ALLOCATED TO SYSUT1
IEF237I 180  ALLOCATED TO SYSUT2
IEF237I 14C  ALLOCATED TO SYSUT3
IEF237I 190  ALLOCATED TO SYSUT4
IEF237I 14B  ALLOCATED TO SYSLIN
IEF237I JES2 ALLOCATED TO SYSPRINT
IEF237I DMY  ALLOCATED TO SYSPUNCH
IEF237I 280  ALLOCATED TO SYSIN
IEF237I 240  ALLOCATED TO SYS00034
IEF142I HERC01I COB STEP5 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   SYS1.USRCOPY.COBOL                           KEPT          *--------0
IEF285I   VOL SER NOS= PUB002.
IEF285I   SYS07015.T021317.RA000.HERC01I.R0000001      DELETED       *--------6
IEF285I   VOL SER NOS= SPOOL0.
IEF285I   SYS07015.T021317.RA000.HERC01I.R0000002      DELETED       *--------6
IEF285I   VOL SER NOS= WORK02.
IEF285I   SYS07015.T021317.RA000.HERC01I.R0000003      DELETED       *--------9
IEF285I   VOL SER NOS= SMP004.
IEF285I   SYS07015.T021317.RA000.HERC01I.R0000004      DELETED       *--------3
IEF285I   VOL SER NOS= WORK03.
IEF285I   SYS07015.T021317.RA000.HERC01I.COBOBJ        PASSED        *-------38
IEF285I   VOL SER NOS= SMP003.
IEF285I   JES2.JOB00197.SO0112                         SYSOUT
IEF285I   HERC01.DYNALOAD.COBOL                        KEPT          *--------3
IEF285I   VOL SER NOS= PUB002.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF373I STEP /COB     / START 07015.0213
IEF374I STEP /COB     / STOP  07015.0213 CPU    0MIN 00.13SEC SRB    0MIN 00.07SEC VIRT  2076K SYS   204K
************************************************************************************************************************************
*     7. Jobstep of job: HERC01I     Stepname: COB         Program name: IKFCBL00   Executed on 15.01.07 from 02.13.17 to 02.13.18 *
*         elapsed time  24:00:00,37                      CPU-Identifier:  BSP1           Page-in:      0                           *
*             CPU time  00:00:00,20               Virtual Storage used:   2076K         Page-out:      0                           *
*           corr. CPU:  00:00:00,20   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     280.......0 151.......6 180.......6 14C.......9 190.......3 14B......38 DMY.......0 DMY.......0 280.......3 240.......0      *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,33                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR HERC01I LKED STEP5
IEF237I JES2 ALLOCATED TO SYSPRINT
IEF237I 14B  ALLOCATED TO SYSLIN
IEF237I DMY  ALLOCATED TO
IEF237I 190  ALLOCATED TO SYSUT1
IEF237I 148  ALLOCATED TO SYSLIB
IEF237I 280  ALLOCATED TO
IEF237I 240  ALLOCATED TO SYS00036
IEF237I 280  ALLOCATED TO SYSLMOD
IEF142I HERC01I LKED STEP5 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   JES2.JOB00197.SO0113                         SYSOUT
IEF285I   SYS07015.T021317.RA000.HERC01I.COBOBJ        DELETED       *-------39
IEF285I   VOL SER NOS= SMP003.
IEF285I   SYS07015.T021317.RA000.HERC01I.R0000005      DELETED       *--------0
IEF285I   VOL SER NOS= WORK03.
IEF285I   SYS1.COBLIB                                  KEPT          *-------18
IEF285I   VOL SER NOS= MVSRES.
IEF285I   HERC01.DYNALOAD.LOADLIB                      KEPT          *--------7
IEF285I   VOL SER NOS= PUB002.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   HERC01.DYNALOAD.LOADLIB                      KEPT          *-------11
IEF285I   VOL SER NOS= PUB002.
IEF373I STEP /LKED    / START 07015.0213
IEF374I STEP /LKED    / STOP  07015.0213 CPU    0MIN 00.05SEC SRB    0MIN 00.01SEC VIRT   128K SYS   192K
************************************************************************************************************************************
*     8. Jobstep of job: HERC01I     Stepname: LKED        Program name: IEWL       Executed on 15.01.07 from 02.13.18 to 02.13.18 *
*         elapsed time  24:00:00,13                      CPU-Identifier:  BSP1           Page-in:      0                           *
*             CPU time  00:00:00,06               Virtual Storage used:    128K         Page-out:      0                           *
*           corr. CPU:  00:00:00,06   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     DMY.......0 14B......39 DMY.......0 190.......0 148......18 280.......7 240.......0 280......11                              *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,10                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR HERC01I COB STEP6
IEF237I 280  ALLOCATED TO SYSLIB
IEF237I 190  ALLOCATED TO SYSUT1
IEF237I 149  ALLOCATED TO SYSUT2
IEF237I 14A  ALLOCATED TO SYSUT3
IEF237I 14C  ALLOCATED TO SYSUT4
IEF237I 180  ALLOCATED TO SYSLIN
IEF237I JES2 ALLOCATED TO SYSPRINT
IEF237I DMY  ALLOCATED TO SYSPUNCH
IEF237I 280  ALLOCATED TO SYSIN
IEF237I 240  ALLOCATED TO SYS00038
IEF142I HERC01I COB STEP6 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   SYS1.USRCOPY.COBOL                           KEPT          *--------0
IEF285I   VOL SER NOS= PUB002.
IEF285I   SYS07015.T021317.RA000.HERC01I.R0000006      DELETED       *--------6
IEF285I   VOL SER NOS= WORK03.
IEF285I   SYS07015.T021317.RA000.HERC01I.R0000007      DELETED       *--------6
IEF285I   VOL SER NOS= SMP001.
IEF285I   SYS07015.T021317.RA000.HERC01I.R0000008      DELETED       *--------9
IEF285I   VOL SER NOS= SMP002.
IEF285I   SYS07015.T021317.RA000.HERC01I.R0000009      DELETED       *--------3
IEF285I   VOL SER NOS= SMP004.
IEF285I   SYS07015.T021317.RA000.HERC01I.COBOBJ        PASSED        *-------26
IEF285I   VOL SER NOS= WORK02.
IEF285I   JES2.JOB00197.SO0114                         SYSOUT
IEF285I   HERC01.DYNALOAD.COBOL                        KEPT          *--------2
IEF285I   VOL SER NOS= PUB002.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF373I STEP /COB     / START 07015.0213
IEF374I STEP /COB     / STOP  07015.0213 CPU    0MIN 00.11SEC SRB    0MIN 00.06SEC VIRT  2076K SYS   204K
************************************************************************************************************************************
*     9. Jobstep of job: HERC01I     Stepname: COB         Program name: IKFCBL00   Executed on 15.01.07 from 02.13.18 to 02.13.18 *
*         elapsed time  24:00:00,30                      CPU-Identifier:  BSP1           Page-in:      0                           *
*             CPU time  00:00:00,17               Virtual Storage used:   2076K         Page-out:      0                           *
*           corr. CPU:  00:00:00,17   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     280.......0 190.......6 149.......6 14A.......9 14C.......3 180......26 DMY.......0 DMY.......0 280.......2 240.......0      *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,28                                             *
************************************************************************************************************************************
IEF236I ALLOC. FOR HERC01I LKED STEP6
IEF237I JES2 ALLOCATED TO SYSPRINT
IEF237I 180  ALLOCATED TO SYSLIN
IEF237I DMY  ALLOCATED TO
IEF237I 149  ALLOCATED TO SYSUT1
IEF237I 148  ALLOCATED TO SYSLIB
IEF237I 240  ALLOCATED TO
IEF237I 280  ALLOCATED TO SYSLMOD
IEF237I 240  ALLOCATED TO SYS00040
IEF142I HERC01I LKED STEP6 - STEP WAS EXECUTED - COND CODE 0000
IEF285I   JES2.JOB00197.SO0115                         SYSOUT
IEF285I   SYS07015.T021317.RA000.HERC01I.COBOBJ        DELETED       *-------27
IEF285I   VOL SER NOS= WORK02.
IEF285I   SYS07015.T021317.RA000.HERC01I.R0000010      DELETED       *--------0
IEF285I   VOL SER NOS= SMP001.
IEF285I   SYS1.COBLIB                                  KEPT          *-------17
IEF285I   VOL SER NOS= MVSRES.
IEF285I   SYS1.USRSUBS.LOADLIB                         KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF285I   HERC01.DYNALOAD.LOADLIB                      KEPT          *-------10
IEF285I   VOL SER NOS= PUB002.
IEF285I   SYS1.UCAT.TSO                                KEPT          *--------0
IEF285I   VOL SER NOS= PUB000.
IEF373I STEP /LKED    / START 07015.0213
IEF374I STEP /LKED    / STOP  07015.0213 CPU    0MIN 00.05SEC SRB    0MIN 00.01SEC VIRT   128K SYS   200K
************************************************************************************************************************************
*    10. Jobstep of job: HERC01I     Stepname: LKED        Program name: IEWL       Executed on 15.01.07 from 02.13.18 to 02.13.18 *
*         elapsed time  24:00:00,11                      CPU-Identifier:  BSP1           Page-in:      0                           *
*             CPU time  00:00:00,06               Virtual Storage used:    128K         Page-out:      0                           *
*           corr. CPU:  00:00:00,06   CPU time has been corrected by  1 / 1,0  multiplier                                          *
*                                                                                                                                  *
*     I/O Operation                                                                                                                *
*     Number of records read via DD * or DD DATA:      0                                                                           *
*     DMY.......0 180......27 DMY.......0 149.......0 148......17 240.......0 280......10 240.......0                              *
*                                                                                                                                  *
*                                          Charge for step (w/o SYSOUT):          0,10                                             *
************************************************************************************************************************************
IEF237I 151  ALLOCATED TO SYS00005
IEF285I   SYS07015.T021318.RA000.HERC01I.R0000005      KEPT          *--------0
IEF285I   VOL SER NOS= SPOOL0.
IEF285I   SYS07015.T021317.RA000.HERC01I.COBOL         DELETED
IEF285I   VOL SER NOS= SPOOL0.
IEF375I  JOB /HERC01I / START 07015.0213
IEF376I  JOB /HERC01I / STOP  07015.0213 CPU    0MIN 00.76SEC SRB    0MIN 00.19SEC

IDCAMS  SYSTEM SERVICES                                           TIME: 02:13:17        01/15/07     PAGE   1

 DELETE 'HERC01.DYNALOAD.ASM' NONVSAM PURGE                             00000100
IKJ56228I DATA SET HERC01.DYNALOAD.ASM NOT IN CATALOG OR CATALOG CAN
IKJ56228I NOT BE ACCESSED
IDC0551I **ENTRY HERC01.DYNALOAD.ASM NOT DELETED
IDC0001I FUNCTION COMPLETED, HIGHEST CONDITION CODE WAS 8

 DELETE 'HERC01.DYNALOAD.COBOL' NONVSAM PURGE                           00000110
IKJ56228I DATA SET HERC01.DYNALOAD.COBOL NOT IN CATALOG OR CATALOG CAN
IKJ56228I NOT BE ACCESSED
IDC0551I **ENTRY HERC01.DYNALOAD.COBOL NOT DELETED
IDC0001I FUNCTION COMPLETED, HIGHEST CONDITION CODE WAS 8

 DELETE 'HERC01.DYNALOAD.LOADLIB' NONVSAM PURGE                         00000120
IKJ56228I DATA SET HERC01.DYNALOAD.LOADLIB NOT IN CATALOG OR CATALOG
IKJ56228I CAN NOT BE ACCESSED
IDC0551I **ENTRY HERC01.DYNALOAD.LOADLIB NOT DELETED
IDC0001I FUNCTION COMPLETED, HIGHEST CONDITION CODE WAS 8

 SET MAXCC = 0                                                          00000130

IDC0002I IDCAMS PROCESSING COMPLETE. MAXIMUM CONDITION CODE WAS 0
       SYSIN                            NEW MASTER                                        IEBUPDTE LOG PAGE 0001
       ./   ADD NAME=DYNALOAD,LIST=ALL,SEQFLD=738                              00000230
       ./  NUMBER NEW1=10,INCR=10                                              00000240
                                        *                                                                     * 00000010
                                                 PRINT ON,GEN,NODATA                                            00000020
                                        *---------------------------------------------------------------------* 00000030
                                        *                                                                     * 00000040
                                        * THIS ROUTINE IS DESIGNED TO PROVIDE DYNAMIC PROGRAM LOADING         * 00000050
                                        * FOR PROGRAMS COMPILED WITH COMPILERS THAT ONLY SUPPORT STATIC       * 00000060
                                        * CALLS.  MVT COBOL IS AN EXAMPLE OF THIS.                            * 00000070
                                        *                                                                     * 00000080
                                        * EXAMPLE:   IN MVT COBOL,                                            * 00000090
                                        *      CALL 'PROGRAMA' USING PARM-1 PARM-2.                           * 00000100
                                        * IT IS NECESSARY TO LINK THE OBJECT MODULE FOR THE PROGRAMA          * 00000110
                                        * ROUTINE TO EACH CALLING COBOL PROGRAM.  THE PROGRAM CODE AND        * 00000120
                                        * WORKING STORAGE ARE PRESERVED BETWEEN CALLS.                        * 00000130
                                        *                                                                     * 00000140
                                        * IN MVS COBOL, THE STATIC CALL WILL FUNCTION THE SAME WAY.  AN       * 00000150
                                        * EXTENSTION TO COBOL ALLOWS FOR DYNAMIC CALLS TO SUBROUTINES.        * 00000160
                                        *                                                                     * 00000170
                                        *     WORKING-STORAGE SECTION.                                        * 00000180
                                        *     ...                                                             * 00000190
                                        *         05  WS-PGM-NAME        PIC X(8)  VALUE SPACES.              * 00000200
                                        *     ...                                                             * 00000210
                                        *      ...                                                            * 00000220
                                        *      PROCEDURE DIVISION.                                            * 00000230
                                        *      ...                                                            * 00000240
                                        *      MOVE 'PROGRAMA' TO WS-PGM-NAME.                                * 00000250
                                        *      CALL WS-PGM-NAME USING PARM-1 PARM-2.                          * 00000260
                                        *                                                                     * 00000270
                                        * THIS CALL RESULTS IN 'PROGRAMA' BEING LOADED AT RUN TIME INTO       * 00000280
                                        * MEMORY AND THEN CALLED.   EACH TIME A MODULE IS DYNAMICALLY CALLED, * 00000290
                                        * MVS CHECKS TO SEE IF THE LOAD MODULE IS RENTRANT OR RESUABLE.  IF   * 00000300
                                        * SO, THE COPY OF THE PROGRAM IN MEMORY IS REUSED.  IF NOT, A NEW     * 00000310
                                        * COPY IF THE PROGRAM IS LOADED FROM DISK AND CALLED.                 * 00000320
                                        *                                                                     * 00000330
                                        * THE MVS COBOL DYNAMIC CALL CAN BE SIMULATED IN MVT COBOL BY         * 00000340
                                        * CALLING AN ASSEMBLER PROGRAM WHICH WILL LOAD THE SUBROUTINE AND     * 00000350
                                        * PASS THE OPTIONAL PARAMETERS.                                       * 00000360
                                        *                                                                     * 00000370
                                        * EXAMPLE:                                                            * 00000380
                                        *     WORKING-STORAGE SECTION.                                        * 00000390
                                        *     01  WS-PGM-BLK.                                                 * 00000400
                                        *         05  WS-PGM-NAME        PIC X(8)  VALUE SPACES.              * 00000410
                                        *         05  WS-PGM-ADDR        PIC X(4)  VALUE LOW-VALUES.          * 00000420
                                        *         05  WS-CALL-MODE       PIC X     VALUE 'K'.                 * 00000430
                                        *         05  FILLER             PIC X(3)  VALUE LOW-VALUES.          * 00000440
                                        *      ...                                                            * 00000450
                                        *      PROCEDURE DIVISION.                                            * 00000460
                                        *      ...                                                            * 00000470
                                        *                                                                     * 00000480
                                        *      MOVE 'PROGRAMA' TO WS-PGM-NAME.                                * 00000490
                                        *      CALL 'DYNALOAD' USING WS-PGM-BLK  PARM-1 PARM-2.               * 00000500
       SYSIN                            NEW MASTER                                        IEBUPDTE LOG PAGE 0002
                                        *                                                                     * 00000510
                                        *                                                                     * 00000520
                                        *  NOTES:                                                             * 00000530
                                        *    - THE WS-PGM-ADDR FIELD MUST BE INITIALIZED TO LOW-VALUES        * 00000540
                                        *      BEFORE THE FIRST CALL.  DO NOT CHANGE THE VALUE OF             * 00000550
                                        *      THIS FIELD.  IF IT IS NOT LOW-VALUES, DYNALOAD ASSUMES         * 00000560
                                        *      THIS IS THE ADDRESS IN MEMORY OF PROGRAMA.                     * 00000570
                                        *                                                                     * 00000580
                                        *    - THE WS-CALL-MODE  MUST BE 'K' OR 'R'.                          * 00000590
                                        *        K INDICATES KEEP THE WORKING STORAGE AND MODULE FROM         * 00000600
                                        *          LAST CALL.  IF WS-PGM-ADDR IS NOT LOW-VALUES, THIS         * 00000610
                                        *          ADDRESS IS CALLED.                                         * 00000620
                                        *                                                                     * 00000630
                                        *        R INDICATE REFRESH MODULE FROM DISK, THUS CLEARING           * 00000640
                                        *          WORKING STORAGE BACK TO THE INITIAL VALUES.                * 00000650
                                        *                                                                     * 00000660
                                        *       YOU MAY DEFINE AND USE AS MANY WS-PGM-BLK AS NEEDED.          * 00000670
                                        *                                                                     * 00000680
                                        * IT IS NECESSARY TO LINK THE OBJECT MODULE FOR THE DYNALOAD          * 00000690
                                        * ROUTINE TO EACH CALLING PROGRAM. IT IS ALSO NECESSARY TO LINK       * 00000700
                                        * THE PROGRAMA AS AN EXECUTABLE MODULE.  THE BENEFIT OF THIS IS THE   * 00000710
                                        * MODULE IS NOT STATIC LINKED INTO ALL MODULES WHICH CALL IT.         * 00000720
                                        * IF THE ROUTINE IS CHANGED, AS LONG AS THE PARM FORMATS ARE          * 00000730
                                        * THE SAME, THE CALLING MODULES WILL NOT NEED TO BE CHANGED.          * 00000740
                                        *                                                                     * 00000750
                                        * FOR EXAMPLE, AN MVT COBOL APPLICATION CONSISTS OF 100 PROGRAMS,     * 00000760
                                        * EACH OF WHICH CALL AN IO MODULE CALLED IOMOD.  USING STATIC CALLS,  * 00000770
                                        * A COPY OF IOMOD IS LINK EDITED INTO EACH OF THE 100 LOAD MODULES.   * 00000780
                                        * MAKING A CHANGE TO IOMOD WOULD REQUIRE 100 LOAD MODULES TO BE       * 00000790
                                        * RELINKED.  USING DYNALOAD, ONLY IOMOD WOULD NEED TO BE RELINKED.    * 00000800
                                        * THE 100 CALLING MODULES WOULD ONLY NEED TO BE TESTED.               * 00000810
                                        *                                                                     * 00000820
                                        * I HAVE USED THIS ROUTINE SINCE THE 1970'S.  IT WILL WORK WITH       * 00000830
                                        * MVS COBOL BUT IT COULD CONFUSE DEBUGGERS.                           * 00000840
                                        *                                                                     * 00000850
                                        * THIS CODE IS PLACED IN THE PUBLIC DOMAIN AND MAY BE FREELY USED     * 00000860
                                        * AND INCORPORATED INTO DERIVED WORKS AS LONG AS ATTRIBUTION TO THE   * 00000870
                                        * ORIGINAL AUTHORSHIP REMAINS IN ANY DISTRIBUTED COPIES OF THE ALC    * 00000880
                                        * SOURCE.                                                             * 00000890
                                        *                                                                     * 00000900
                                        * REWRITTEN DECEMBER, 2006 BY ED LISS                                 * 00000910
                                        * HTTP://WWW.SUMMERMOON.COM/HERCULES/                                 * 00000920
                                        *                                                                     * 00000930
                                        *---------------------------------------------------------------------* 00000940
                                                 EJECT                                                          00000950
                                        *                                                                       00000960
                                                 LCLC  &SYSECT                                                  00000970
                                        &SYSECT  SETC  'DYNALOAD'          ROUTINE IDENTIFICATION               00000980
                                        *                                                                       00000990
                                        &SYSECT  CSECT                                                          00001000
                                        *                                                                       00001010
                                        @IDENT01 B     @IDENT04(R15)       BRANCH AROUND IDENT CONSTANTS        00001020
       SYSIN                            NEW MASTER                                        IEBUPDTE LOG PAGE 0003
                                                 DC    AL1(@IDENT03-@IDENT02)                                   00001030
                                        @IDENT02 DC    C'&SYSECT V1'                                            00001040
                                                 DC    C'&SYSDATE &SYSTIME - '                                  00001050
                                                 DC    C'DYNAMIC LOAD ROUTINE FOR MVT COBOL'                    00001060
                                        @IDENT03 DS    0H                                                       00001070
                                        @IDENT04 EQU   *-@IDENT01                                               00001080
                                        *                                                                       00001090
                                                 SAVE  (14,12)                                                  00001100
                                        *                                                                       00001110
                                                 BALR  R12,0               BASE REGISTERS ARE 12                00001120
                                                 USING *,R12                                                    00001130
                                        *                                                                       00001140
                                                 LR    R5,R13              COPY CALLER'S SAVEAREA ADDR          00001150
                                                 LA    R13,SAVEAREA        ESTABLISH MY SAVEAREA                00001160
                                                 ST    R5,4(,R13)          BACK CHAIN SAVE AREAS                00001170
                                                 ST    R13,8(,R5)          FORWARD CHAIN SAVE AREAS             00001180
                                        *                                                                       00001190
                                        *---------------------------------------------------------------------* 00001200
                                        * AT LEAST ONE PARM MUST BE PASSED.  THIS IS THE NAME OF THE LOAD     * 00001210
                                        * MODULE TO DYNAMICALY CALL.  IF THIS IS MISSING, THE MODULE WILL     * 00001220
                                        * ABORT WITH A U0001 ABEND CODE.                                      * 00001230
                                        * THIS MODULE WILL STRIP OFF THE PROGRAM NAME AND PASS THE REMAINING  * 00001240
                                        * PARMS, IF ANY, TO THE SUBROUTINE BEING CALLED.                      * 00001250
                                        * IF THERE ARE NO PARMS TO PASS, R1 IS SET TO ZEROS.                  * 00001260
                                        *---------------------------------------------------------------------* 00001270
                                                 LTR   R1,R1                                                    00001280
                                                 BNZ   PARMFND             BRANCH IF PARM LIST PRESENT          00001290
                                                 ABEND 1,,,USER                                                 00001300
                                        PARMFND  DS    0H                                                       00001310
                                                 LR    R2,R1               COPY PARMLIST ADDR TO R2             00001320
                                                 L     R3,0(,R2)           GET ADDR OF PROGRAM NAME             00001330
                                                 MVC   PGMBLK,0(R3)        GET PGMBLK - NAME, ADDR, FUNC        00001340
                                                 TM    0(R2),X'80'         CHECK FOR LAST PARM                  00001350
                                                 BZ    OPTPARMS            MORE PARMS FOUND                     00001360
                                                 SR    R4,R4               SET PARM ADDR TO ZERO                00001370
                                                 B     DYNACALL                                                 00001380
                                        OPTPARMS DS    0H                                                       00001390
                                                 LA    R4,4(,R2)           ADVANCE TO NEXT PARM                 00001400
                                        DYNACALL DS    0H                                                       00001410
                                                 L     R0,PGMADDR          GET ADDR IN MEMORY                   00001420
                                                 CLC   PGMADDR,=4X'00'     IS IS ZEROS                          00001430
                                                 BE    DOLOAD                                                   00001440
                                                 CLI   PGMFUNC,C'K'        KEEP CALL?                           00001450
                                                 BE    SKIPLOAD                                                 00001460
                                                 CLI   PGMFUNC,C'R'                                             00001470
                                                 BE    DOLOAD                                                   00001480
                                                 ABEND 2,,,USER            ABORT IF NO CORRECT PARM             00001490
                                        *                                                                       00001500
                                        DOLOAD   DS    0H                                                       00001510
                                                 LOAD  EPLOC=PGM                                                00001520
                                                 ST    R0,PGMADDR                                               00001530
                                        SKIPLOAD DS    0H                                                       00001540
       SYSIN                            NEW MASTER                                        IEBUPDTE LOG PAGE 0004
                                                 MVC   0(L'PGMBLK,R3),PGMBLK PUT CTL BLK BACK IN CALLERS WS     00001550
                                                 LR    R1,R4               PUT PARMLIST IN R1                   00001560
                                                 LR    R15,R0              COPY MODULE ADDR TO R15              00001570
                                                 BALR  R14,R15             CALL LOADED PGM                      00001580
                                        GOBACK   DS    0H                                                       00001590
                                        *---------------------------------------------------------------------* 00001600
                                        * RETURN TO CALLING PROGRAM WITH ZERO RETURN CODE IN R15              * 00001610
                                        *---------------------------------------------------------------------* 00001620
                                                 L     R13,4(,R13)    RESET TO CALLERS SAVE AREA                00001630
                                                 RETURN (14,12),RC=0                                            00001640
                                        *                                                                       00001650
                                                 DS    0F                                                       00001660
                                        PGMBLK   DS    0CL16                                                    00001670
                                        PGM      DC    CL8' '                                                   00001680
                                        PGMADDR  DC    F'0'                                                     00001690
                                        PGMFUNC  DC    C' '                                                     00001700
                                                 DS    CL3                                                      00001710
                                        *                                                                       00001720
                                        *---------------------------------------------------------------------* 00001730
                                        * MY REGISTER SAVE AREA                                               * 00001740
                                        *---------------------------------------------------------------------* 00001750
                                        SAVEAREA DS    18F                                                      00001760
                                        *                                                                       00001770
                                        R0       EQU   0                                                        00001780
                                        R1       EQU   1                                                        00001790
                                        R2       EQU   2                                                        00001800
                                        R3       EQU   3                                                        00001810
                                        R4       EQU   4                                                        00001820
                                        R5       EQU   5                                                        00001830
                                        R6       EQU   6                                                        00001840
                                        R7       EQU   7                                                        00001850
                                        R8       EQU   8                                                        00001860
                                        R9       EQU   9                                                        00001870
                                        R10      EQU   10                                                       00001880
                                        R11      EQU   11                                                       00001890
                                        R12      EQU   12                                                       00001900
                                        R13      EQU   13                                                       00001910
                                        R14      EQU   14                                                       00001920
                                        R15      EQU   15                                                       00001930
                                        *                                                                       00001940
                                                 END                                                            00001950
IEB817I MEMBER NAME (DYNALOAD) NOT FOUND IN NM DIRECTORY.  STOWED WITH TTR.
IEB818I HIGHEST CONDITION CODE WAS 00000000
IEB819I END OF JOB IEBUPDTE.
DATA SET UTILITY - GENERATE                                                                       PAGE 0001
 GENERATE MAXFLDS=2,MAXLITS=10                                          00002300
 RECORD FIELD=(72,1,,1),FIELD=(8,'        ',,73)                        00002310

PROCESSING ENDED AT EOD
       SYSIN                            NEW MASTER                                        IEBUPDTE LOG PAGE 0001
       ./   ADD NAME=TESTDYNA,LIST=ALL,SEQFLD=016
       ./  NUMBER NEW1=10,INCR=10
                                        000010 ID DIVISION.
                                        000020 PROGRAM-ID.  TESTDYNA.
                                        000030******************************************************************
                                        000040*
                                        000050*  TESTDYNA - TEST DRIVER FOR THE DYNALOAD MODULE
                                        000060*        THIS MODULE TESTS/DEMONSTRATES THE DYNAMIC LOADING OF
                                        000070*        SUBROUTINES.
                                        000080*
                                        000090******************************************************************
                                        000100 ENVIRONMENT DIVISION.
                                        000110 DATA DIVISION.
                                        000120 WORKING-STORAGE SECTION.
                                        000130 01  FILLER PIC X(32)  VALUE '***** START TESTDYNA WKSTG *****'.
                                        000140 01  WS-MODULE-BLK-1.
                                        000150     05  WS-MODULE-NAME1     PIC X(8)   VALUE 'TESTDYN1'.
                                        000160     05  WS-MODULE-ADDR      PIC X(4)   VALUE LOW-VALUES.
                                        000170     05  WS-CALL-MODE1       PIC X      VALUE 'K'.
                                        000180     05  FILLER              PIC XXX    VALUE LOW-VALUES.
                                        000190 01  WS-MODULE-BLK-2.
                                        000200     05  WS-MODULE-NAME2     PIC X(8)   VALUE 'TESTDYN1'.
                                        000210     05  WS-MODULE-ADDR      PIC X(4)   VALUE LOW-VALUES.
                                        000220     05  WS-CALL-MODE2       PIC X      VALUE 'R'.
                                        000230     05  FILLER              PIC XXX    VALUE LOW-VALUES.
                                        000240 01  WS-PARM-1.
                                        000250     05  WS-COUNTER          PIC 9(5)   VALUE ZEROS.
                                        000260     05  WS-SUB              PIC 9(5)   VALUE ZEROS.
                                        000270 01  FILLER PIC X(32)  VALUE '****** END TESTDYNA WKSTG ******'.
                                        000280 PROCEDURE DIVISION.
                                        000290 START-HERE.
                                        000300     DISPLAY 'STARTING TESTDYNA WITH DEFAULT K MODE.'.
                                        000310
                                        000320     PERFORM DYNA-CALL   10 TIMES.
                                        000330     PERFORM DYNA-CALL-R 10 TIMES.
                                        000340 E-O-J.
                                        000350     DISPLAY 'TESTDYNA ENDING'.
                                        000360
                                        000370     MOVE ZERO TO RETURN-CODE.
                                        000380     STOP RUN.
                                        000390
                                        000400 DYNA-CALL.
                                        000410
                                        000420     DISPLAY 'CALLING ' WS-MODULE-NAME1 ' USING ' WS-CALL-MODE1.
                                        000430     CALL 'DYNALOAD' USING WS-MODULE-BLK-1
                                        000440                           WS-PARM-1.
                                        000450
                                        000460     DISPLAY 'RETURNED FROM ' WS-MODULE-NAME1
                                        000470             ',WS-CALL-MODE = ' WS-CALL-MODE1
                                        000480             ',WS-COUNTER = ' WS-COUNTER
                                        000490             ',WS-SUB = ' WS-SUB.
                                        000500
       SYSIN                            NEW MASTER                                        IEBUPDTE LOG PAGE 0002
                                        000510 DYNA-CALL-R.
                                        000520
                                        000530     DISPLAY 'CALLING ' WS-MODULE-NAME2 ' USING ' WS-CALL-MODE2.
                                        000540     CALL 'DYNALOAD' USING WS-MODULE-BLK-2
                                        000550                           WS-PARM-1.
                                        000560
                                        000570     DISPLAY 'RETURNED FROM ' WS-MODULE-NAME2
                                        000580             ',WS-CALL-MODE = ' WS-CALL-MODE2
                                        000590             ',WS-COUNTER = ' WS-COUNTER
                                        000600             ',WS-SUB = ' WS-SUB.
IEB817I MEMBER NAME (TESTDYNA) NOT FOUND IN NM DIRECTORY.  STOWED WITH TTR.
       SYSIN                            NEW MASTER                                        IEBUPDTE LOG PAGE 0003
       ./   ADD NAME=TESTDYN1,LIST=ALL,SEQFLD=016
       ./  NUMBER NEW1=10,INCR=10
                                        000010 ID DIVISION.
                                        000020 PROGRAM-ID.  TESTDYN1.
                                        000030******************************************************************
                                        000040*
                                        000050*  TESTDYN1 - TEST STUB FOR THE DYNALOAD MODULE
                                        000060*        THIS MODULE TESTS/DEMONSTRATES THE DYNAMIC LOADING OF
                                        000070*        SUBROUTINES.
                                        000080*
                                        000090******************************************************************
                                        000100 ENVIRONMENT DIVISION.
                                        000110 DATA DIVISION.
                                        000120 WORKING-STORAGE SECTION.
                                        000130 01  WS-COUNTER              PIC 9(5)  VALUE ZERO.
                                        000140 LINKAGE SECTION.
                                        000150 01  LS-PARM-1.
                                        000160     05  LS-COUNTER          PIC 9(5).
                                        000170     05  LS-SUB              PIC 9(5).
                                        000180 PROCEDURE DIVISION USING LS-PARM-1.
                                        000190 START-HERE.
                                        000200     DISPLAY 'STARTING TESTDYN1.'.
                                        000210     ADD 1 TO LS-COUNTER.
                                        000220     ADD 1 TO WS-COUNTER.
                                        000230     MOVE  WS-COUNTER   TO  LS-SUB.
                                        000240     DISPLAY 'RETURNING WS-COUNTER = ' LS-COUNTER
                                        000250             ',WS-SUB = ' LS-SUB.
                                        000260     MOVE ZERO TO RETURN-CODE.
                                        000270     GOBACK.
IEB817I MEMBER NAME (TESTDYN1) NOT FOUND IN NM DIRECTORY.  STOWED WITH TTR.
IEB818I HIGHEST CONDITION CODE WAS 00000000
IEB819I END OF JOB IEBUPDTE.
                                               EXTERNAL SYMBOL DICTIONARY                                      PAGE    1
SYMBOL   TYPE  ID   ADDR  LENGTH LDID                                                            ASM 0201 02.13 01/15/07
DYNALOAD  SD  0001 000000 00012C
                                                                                                               PAGE    2
  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT                                       ASM 0201 02.13 01/15/07
                                      1 *                                                                     * 00000010
                                      2          PRINT ON,GEN,NODATA                                            00000020
                                      3 *---------------------------------------------------------------------* 00000030
                                      4 *                                                                     * 00000040
                                      5 * THIS ROUTINE IS DESIGNED TO PROVIDE DYNAMIC PROGRAM LOADING         * 00000050
                                      6 * FOR PROGRAMS COMPILED WITH COMPILERS THAT ONLY SUPPORT STATIC       * 00000060
                                      7 * CALLS.  MVT COBOL IS AN EXAMPLE OF THIS.                            * 00000070
                                      8 *                                                                     * 00000080
                                      9 * EXAMPLE:   IN MVT COBOL,                                            * 00000090
                                     10 *      CALL 'PROGRAMA' USING PARM-1 PARM-2.                           * 00000100
                                     11 * IT IS NECESSARY TO LINK THE OBJECT MODULE FOR THE PROGRAMA          * 00000110
                                     12 * ROUTINE TO EACH CALLING COBOL PROGRAM.  THE PROGRAM CODE AND        * 00000120
                                     13 * WORKING STORAGE ARE PRESERVED BETWEEN CALLS.                        * 00000130
                                     14 *                                                                     * 00000140
                                     15 * IN MVS COBOL, THE STATIC CALL WILL FUNCTION THE SAME WAY.  AN       * 00000150
                                     16 * EXTENSTION TO COBOL ALLOWS FOR DYNAMIC CALLS TO SUBROUTINES.        * 00000160
                                     17 *                                                                     * 00000170
                                     18 *     WORKING-STORAGE SECTION.                                        * 00000180
                                     19 *     ...                                                             * 00000190
                                     20 *         05  WS-PGM-NAME        PIC X(8)  VALUE SPACES.              * 00000200
                                     21 *     ...                                                             * 00000210
                                     22 *      ...                                                            * 00000220
                                     23 *      PROCEDURE DIVISION.                                            * 00000230
                                     24 *      ...                                                            * 00000240
                                     25 *      MOVE 'PROGRAMA' TO WS-PGM-NAME.                                * 00000250
                                     26 *      CALL WS-PGM-NAME USING PARM-1 PARM-2.                          * 00000260
                                     27 *                                                                     * 00000270
                                     28 * THIS CALL RESULTS IN 'PROGRAMA' BEING LOADED AT RUN TIME INTO       * 00000280
                                     29 * MEMORY AND THEN CALLED.   EACH TIME A MODULE IS DYNAMICALLY CALLED, * 00000290
                                     30 * MVS CHECKS TO SEE IF THE LOAD MODULE IS RENTRANT OR RESUABLE.  IF   * 00000300
                                     31 * SO, THE COPY OF THE PROGRAM IN MEMORY IS REUSED.  IF NOT, A NEW     * 00000310
                                     32 * COPY IF THE PROGRAM IS LOADED FROM DISK AND CALLED.                 * 00000320
                                     33 *                                                                     * 00000330
                                     34 * THE MVS COBOL DYNAMIC CALL CAN BE SIMULATED IN MVT COBOL BY         * 00000340
                                     35 * CALLING AN ASSEMBLER PROGRAM WHICH WILL LOAD THE SUBROUTINE AND     * 00000350
                                     36 * PASS THE OPTIONAL PARAMETERS.                                       * 00000360
                                     37 *                                                                     * 00000370
                                     38 * EXAMPLE:                                                            * 00000380
                                     39 *     WORKING-STORAGE SECTION.                                        * 00000390
                                     40 *     01  WS-PGM-BLK.                                                 * 00000400
                                     41 *         05  WS-PGM-NAME        PIC X(8)  VALUE SPACES.              * 00000410
                                     42 *         05  WS-PGM-ADDR        PIC X(4)  VALUE LOW-VALUES.          * 00000420
                                     43 *         05  WS-CALL-MODE       PIC X     VALUE 'K'.                 * 00000430
                                     44 *         05  FILLER             PIC X(3)  VALUE LOW-VALUES.          * 00000440
                                     45 *      ...                                                            * 00000450
                                     46 *      PROCEDURE DIVISION.                                            * 00000460
                                     47 *      ...                                                            * 00000470
                                     48 *                                                                     * 00000480
                                     49 *      MOVE 'PROGRAMA' TO WS-PGM-NAME.                                * 00000490
                                     50 *      CALL 'DYNALOAD' USING WS-PGM-BLK  PARM-1 PARM-2.               * 00000500
                                     51 *                                                                     * 00000510
                                     52 *                                                                     * 00000520
                                     53 *  NOTES:                                                             * 00000530
                                     54 *    - THE WS-PGM-ADDR FIELD MUST BE INITIALIZED TO LOW-VALUES        * 00000540
                                     55 *      BEFORE THE FIRST CALL.  DO NOT CHANGE THE VALUE OF             * 00000550
                                                                                                               PAGE    3
  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT                                       ASM 0201 02.13 01/15/07
                                     56 *      THIS FIELD.  IF IT IS NOT LOW-VALUES, DYNALOAD ASSUMES         * 00000560
                                     57 *      THIS IS THE ADDRESS IN MEMORY OF PROGRAMA.                     * 00000570
                                     58 *                                                                     * 00000580
                                     59 *    - THE WS-CALL-MODE  MUST BE 'K' OR 'R'.                          * 00000590
                                     60 *        K INDICATES KEEP THE WORKING STORAGE AND MODULE FROM         * 00000600
                                     61 *          LAST CALL.  IF WS-PGM-ADDR IS NOT LOW-VALUES, THIS         * 00000610
                                     62 *          ADDRESS IS CALLED.                                         * 00000620
                                     63 *                                                                     * 00000630
                                     64 *        R INDICATE REFRESH MODULE FROM DISK, THUS CLEARING           * 00000640
                                     65 *          WORKING STORAGE BACK TO THE INITIAL VALUES.                * 00000650
                                     66 *                                                                     * 00000660
                                     67 *       YOU MAY DEFINE AND USE AS MANY WS-PGM-BLK AS NEEDED.          * 00000670
                                     68 *                                                                     * 00000680
                                     69 * IT IS NECESSARY TO LINK THE OBJECT MODULE FOR THE DYNALOAD          * 00000690
                                     70 * ROUTINE TO EACH CALLING PROGRAM. IT IS ALSO NECESSARY TO LINK       * 00000700
                                     71 * THE PROGRAMA AS AN EXECUTABLE MODULE.  THE BENEFIT OF THIS IS THE   * 00000710
                                     72 * MODULE IS NOT STATIC LINKED INTO ALL MODULES WHICH CALL IT.         * 00000720
                                     73 * IF THE ROUTINE IS CHANGED, AS LONG AS THE PARM FORMATS ARE          * 00000730
                                     74 * THE SAME, THE CALLING MODULES WILL NOT NEED TO BE CHANGED.          * 00000740
                                     75 *                                                                     * 00000750
                                     76 * FOR EXAMPLE, AN MVT COBOL APPLICATION CONSISTS OF 100 PROGRAMS,     * 00000760
                                     77 * EACH OF WHICH CALL AN IO MODULE CALLED IOMOD.  USING STATIC CALLS,  * 00000770
                                     78 * A COPY OF IOMOD IS LINK EDITED INTO EACH OF THE 100 LOAD MODULES.   * 00000780
                                     79 * MAKING A CHANGE TO IOMOD WOULD REQUIRE 100 LOAD MODULES TO BE       * 00000790
                                     80 * RELINKED.  USING DYNALOAD, ONLY IOMOD WOULD NEED TO BE RELINKED.    * 00000800
                                     81 * THE 100 CALLING MODULES WOULD ONLY NEED TO BE TESTED.               * 00000810
                                     82 *                                                                     * 00000820
                                     83 * I HAVE USED THIS ROUTINE SINCE THE 1970'S.  IT WILL WORK WITH       * 00000830
                                     84 * MVS COBOL BUT IT COULD CONFUSE DEBUGGERS.                           * 00000840
                                     85 *                                                                     * 00000850
                                     86 * THIS CODE IS PLACED IN THE PUBLIC DOMAIN AND MAY BE FREELY USED     * 00000860
                                     87 * AND INCORPORATED INTO DERIVED WORKS AS LONG AS ATTRIBUTION TO THE   * 00000870
                                     88 * ORIGINAL AUTHORSHIP REMAINS IN ANY DISTRIBUTED COPIES OF THE ALC    * 00000880
                                     89 * SOURCE.                                                             * 00000890
                                     90 *                                                                     * 00000900
                                     91 * REWRITTEN DECEMBER, 2006 BY ED LISS                                 * 00000910
                                     92 * HTTP://WWW.SUMMERMOON.COM/HERCULES/                                 * 00000920
                                     93 *                                                                     * 00000930
                                     94 *---------------------------------------------------------------------* 00000940
                                                                                                               PAGE    4
  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT                                       ASM 0201 02.13 01/15/07
                                     96 *                                                                       00000960
                                     97          LCLC  &SYSECT                                                  00000970
                                     98 &SYSECT  SETC  'DYNALOAD'          ROUTINE IDENTIFICATION               00000980
                                     99 *                                                                       00000990
                                    100 &SYSECT  CSECT                                                          00001000
000000                              101+DYNALOAD CSECT                                                          00001000
                                    102 *                                                                       00001010
000000 47FF 0044      00044         103 @IDENT01 B     @IDENT04(R15)       BRANCH AROUND IDENT CONSTANTS        00001020
000004 3F                           104          DC    AL1(@IDENT03-@IDENT02)                                   00001030
                                    105 @IDENT02 DC    C'&SYSECT V1'                                            00001040
000005 C4E8D5C1D3D6C1C4             106+@IDENT02 DC    C'DYNALOAD V1'                                           00001040
                                    107          DC    C'&SYSDATE &SYSTIME - '                                  00001050
000010 F0F161F1F561F0F7             108+         DC    C'01/15/07 02.13 - '                                     00001050
000021 C4E8D5C1D4C9C340             109          DC    C'DYNAMIC LOAD ROUTINE FOR MVT COBOL'                    00001060
000044                              110 @IDENT03 DS    0H                                                       00001070
                            00044   111 @IDENT04 EQU   *-@IDENT01                                               00001080
                                    112 *                                                                       00001090
                                    113          SAVE  (14,12)                                                  00001100
000044                              114+         DS    0H                                                       01650000
000044 90EC D00C      0000C         115+         STM   14,12,12(13)                      SAVE REGISTERS         02950000
                                    116 *                                                                       00001110
000048 05C0                         117          BALR  R12,0               BASE REGISTERS ARE 12                00001120
                            0004A   118          USING *,R12                                                    00001130
                                    119 *                                                                       00001140
00004A 185D                         120          LR    R5,R13              COPY CALLER'S SAVEAREA ADDR          00001150
00004C 41D0 C096      000E0         121          LA    R13,SAVEAREA        ESTABLISH MY SAVEAREA                00001160
000050 5050 D004      00004         122          ST    R5,4(,R13)          BACK CHAIN SAVE AREAS                00001170
000054 50D0 5008      00008         123          ST    R13,8(,R5)          FORWARD CHAIN SAVE AREAS             00001180
                                    124 *                                                                       00001190
                                    125 *---------------------------------------------------------------------* 00001200
                                    126 * AT LEAST ONE PARM MUST BE PASSED.  THIS IS THE NAME OF THE LOAD     * 00001210
                                    127 * MODULE TO DYNAMICALY CALL.  IF THIS IS MISSING, THE MODULE WILL     * 00001220
                                    128 * ABORT WITH A U0001 ABEND CODE.                                      * 00001230
                                    129 * THIS MODULE WILL STRIP OFF THE PROGRAM NAME AND PASS THE REMAINING  * 00001240
                                    130 * PARMS, IF ANY, TO THE SUBROUTINE BEING CALLED.                      * 00001250
                                    131 * IF THERE ARE NO PARMS TO PASS, R1 IS SET TO ZEROS.                  * 00001260
                                    132 *---------------------------------------------------------------------* 00001270
000058 1211                         133          LTR   R1,R1                                                    00001280
00005A 4770 C01A      00064         134          BNZ   PARMFND             BRANCH IF PARM LIST PRESENT          00001290
                                    135          ABEND 1,,,USER                                                 00001300
00005E                              136+         DS    0H                                                       00400002
00005E 4110 0001      00001         137+         LA    1,1                               LOAD PARAMETER REG 1   01900002
000062 0A0D                         138+         SVC   13                 LINK TO ABEND ROUTINE                 02050002
000064                              139 PARMFND  DS    0H                                                       00001310
000064 1821                         140          LR    R2,R1               COPY PARMLIST ADDR TO R2             00001320
000066 5830 2000      00000         141          L     R3,0(,R2)           GET ADDR OF PROGRAM NAME             00001330
00006A D20F C086 3000 000D0 00000   142          MVC   PGMBLK,0(R3)        GET PGMBLK - NAME, ADDR, FUNC        00001340
000070 9180 2000      00000         143          TM    0(R2),X'80'         CHECK FOR LAST PARM                  00001350
000074 4780 C034      0007E         144          BZ    OPTPARMS            MORE PARMS FOUND                     00001360
000078 1B44                         145          SR    R4,R4               SET PARM ADDR TO ZERO                00001370
00007A 47F0 C038      00082         146          B     DYNACALL                                                 00001380
00007E                              147 OPTPARMS DS    0H                                                       00001390
00007E 4140 2004      00004         148          LA    R4,4(,R2)           ADVANCE TO NEXT PARM                 00001400
000082                              149 DYNACALL DS    0H                                                       00001410
000082 5800 C08E      000D8         150          L     R0,PGMADDR          GET ADDR IN MEMORY                   00001420
                                                                                                               PAGE    5
  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT                                       ASM 0201 02.13 01/15/07
000086 D503 C08E C0DE 000D8 00128   151          CLC   PGMADDR,=4X'00'     IS IS ZEROS                          00001430
00008C 4780 C05C      000A6         152          BE    DOLOAD                                                   00001440
000090 95D2 C092      000DC         153          CLI   PGMFUNC,C'K'        KEEP CALL?                           00001450
000094 4780 C06A      000B4         154          BE    SKIPLOAD                                                 00001460
000098 95D9 C092      000DC         155          CLI   PGMFUNC,C'R'                                             00001470
00009C 4780 C05C      000A6         156          BE    DOLOAD                                                   00001480
                                    157          ABEND 2,,,USER            ABORT IF NO CORRECT PARM             00001490
0000A0                              158+         DS    0H                                                       00400002
0000A0 4110 0002      00002         159+         LA    1,2                               LOAD PARAMETER REG 1   01900002
0000A4 0A0D                         160+         SVC   13                 LINK TO ABEND ROUTINE                 02050002
                                    161 *                                                                       00001500
0000A6                              162 DOLOAD   DS    0H                                                       00001510
                                    163          LOAD  EPLOC=PGM                                                00001520
0000A6 0700                         164+         CNOP  0,4                                                      00400002
0000A8 4100 C086      000D0         165+         LA    0,PGM              LOAD PARAMETER INTO REG 0             00800002
0000AC 1B11                         166+         SR    1,1                SHOW NO DCB PRESENT                   01000002
0000AE 0A08                         167+         SVC   8                                                        01200002
0000B0 5000 C08E      000D8         168          ST    R0,PGMADDR                                               00001530
0000B4                              169 SKIPLOAD DS    0H                                                       00001540
0000B4 D20F 3000 C086 00000 000D0   170          MVC   0(L'PGMBLK,R3),PGMBLK PUT CTL BLK BACK IN CALLERS WS     00001550
0000BA 1814                         171          LR    R1,R4               PUT PARMLIST IN R1                   00001560
0000BC 18F0                         172          LR    R15,R0              COPY MODULE ADDR TO R15              00001570
0000BE 05EF                         173          BALR  R14,R15             CALL LOADED PGM                      00001580
0000C0                              174 GOBACK   DS    0H                                                       00001590
                                    175 *---------------------------------------------------------------------* 00001600
                                    176 * RETURN TO CALLING PROGRAM WITH ZERO RETURN CODE IN R15              * 00001610
                                    177 *---------------------------------------------------------------------* 00001620
0000C0 58D0 D004      00004         178          L     R13,4(,R13)    RESET TO CALLERS SAVE AREA                00001630
                                    179          RETURN (14,12),RC=0                                            00001640
0000C4 98EC D00C      0000C         180+         LM    14,12,12(13)                      RESTORE THE REGISTERS  00650000
0000C8 41F0 0000      00000         181+         LA    15,0(0,0)                         LOAD RETURN CODE       01750000
0000CC 07FE                         182+         BR    14                                RETURN                 02000000
                                    183 *                                                                       00001650
0000D0                              184          DS    0F                                                       00001660
0000D0                              185 PGMBLK   DS    0CL16                                                    00001670
0000D0 4040404040404040             186 PGM      DC    CL8' '                                                   00001680
0000D8 00000000                     187 PGMADDR  DC    F'0'                                                     00001690
0000DC 40                           188 PGMFUNC  DC    C' '                                                     00001700
0000DD                              189          DS    CL3                                                      00001710
                                    190 *                                                                       00001720
                                    191 *---------------------------------------------------------------------* 00001730
                                    192 * MY REGISTER SAVE AREA                                               * 00001740
                                    193 *---------------------------------------------------------------------* 00001750
0000E0                              194 SAVEAREA DS    18F                                                      00001760
                                    195 *                                                                       00001770
                            00000   196 R0       EQU   0                                                        00001780
                            00001   197 R1       EQU   1                                                        00001790
                            00002   198 R2       EQU   2                                                        00001800
                            00003   199 R3       EQU   3                                                        00001810
                            00004   200 R4       EQU   4                                                        00001820
                            00005   201 R5       EQU   5                                                        00001830
                            00006   202 R6       EQU   6                                                        00001840
                            00007   203 R7       EQU   7                                                        00001850
                            00008   204 R8       EQU   8                                                        00001860
                            00009   205 R9       EQU   9                                                        00001870
                                                                                                               PAGE    6
  LOC  OBJECT CODE    ADDR1 ADDR2  STMT   SOURCE STATEMENT                                       ASM 0201 02.13 01/15/07
                            0000A   206 R10      EQU   10                                                       00001880
                            0000B   207 R11      EQU   11                                                       00001890
                            0000C   208 R12      EQU   12                                                       00001900
                            0000D   209 R13      EQU   13                                                       00001910
                            0000E   210 R14      EQU   14                                                       00001920
                            0000F   211 R15      EQU   15                                                       00001930
                                    212 *                                                                       00001940
                                    213          END                                                            00001950
000128 00000000                     214                =4X'00'
                                                  CROSS-REFERENCE                                              PAGE    7
SYMBOL    LEN   VALUE   DEFN    REFERENCES                                                       ASM 0201 02.13 01/15/07
@IDENT01 00004 00000000 00103  00111
@IDENT02 00011 00000005 00106  00104
@IDENT03 00002 00000044 00110  00104
@IDENT04 00001 00000044 00111  00103
DOLOAD   00002 000000A6 00162  00152 00156
DYNACALL 00002 00000082 00149  00146
OPTPARMS 00002 0000007E 00147  00144
PARMFND  00002 00000064 00139  00134
PGM      00008 000000D0 00186  00165
PGMADDR  00004 000000D8 00187  00150 00151 00168
PGMBLK   00016 000000D0 00185  00142 00170 00170
PGMFUNC  00001 000000DC 00188  00153 00155
R0       00001 00000000 00196  00150 00168 00172
R1       00001 00000001 00197  00133 00133 00140 00171
R12      00001 0000000C 00208  00117 00118
R13      00001 0000000D 00209  00120 00121 00122 00123 00178 00178
R14      00001 0000000E 00210  00173
R15      00001 0000000F 00211  00103 00172 00173
R2       00001 00000002 00198  00140 00141 00143 00148
R3       00001 00000003 00199  00141 00142 00170
R4       00001 00000004 00200  00145 00145 00148 00171
R5       00001 00000005 00201  00120 00122 00123
SAVEAREA 00004 000000E0 00194  00121
SKIPLOAD 00002 000000B4 00169  00154
                                                  LITERAL CROSS-REFERENCE                                      PAGE    8
SYMBOL    LEN   VALUE   DEFN    REFERENCES                                                       ASM 0201 02.13 01/15/07
=4X'00'  00001 00000128 00214  00151
                                                  ASSEMBLER DIAGNOSTICS AND STATISTICS                         PAGE    9
                                                                                                 ASM 0201 02.13 01/15/07
NO STATEMENTS FLAGGED IN THIS ASSEMBLY
HIGHEST SEVERITY WAS    0
OPTIONS FOR THIS ASSEMBLY
  ALIGN, ALOGIC, BUFSIZE(STD), NODECK, ESD, FLAG(0), LINECOUNT(55), LIST, NOMCALL, YFLAG, WORKSIZE(2097152)
  NOMLOGIC, NONUMBER, OBJECT, NORENT, RLD, NOSTMT, NOLIBMAC, NOTERMINAL, NOTEST, XREF(SHORT)
  SYSPARM()
WORK FILE BUFFER SIZE/NUMBER = 6654/ 1
TOTAL RECORDS READ FROM SYSTEM INPUT        195
TOTAL RECORDS READ FROM SYSTEM LIBRARY      968
TOTAL RECORDS PUNCHED                         9
TOTAL RECORDS PRINTED                       268

 F64-LEVEL LINKAGE EDITOR OPTIONS SPECIFIED XREF,LET,LIST,NCAL
          DEFAULT OPTION(S) USED -  SIZE=(98304,55296)

                                                CROSS REFERENCE TABLE

  CONTROL SECTION                       ENTRY
    NAME    ORIGIN  LENGTH                NAME   LOCATION     NAME   LOCATION     NAME   LOCATION     NAME   LOCATION
  DYNALOAD      00     12C


 ENTRY ADDRESS       00
 TOTAL LENGTH       130
****DYNALOAD  DOES NOT EXIST BUT HAS BEEN ADDED TO DATA SET
AUTHORIZATION CODE IS         0.

  CB545 V2 LVL78 01MAY72                 IBM OS AMERICAN NATIONAL STANDARD COBOL                       DATE JAN 15,1907

   1
00001   000010 ID DIVISION.
00002   000020 PROGRAM-ID.  TESTDYNA.
00003   000030******************************************************************
00004   000040*
00005   000050*  TESTDYNA - TEST DRIVER FOR THE DYNALOAD MODULE
00006   000060*        THIS MODULE TESTS/DEMONSTRATES THE DYNAMIC LOADING OF
00007   000070*        SUBROUTINES.
00008   000080*
00009   000090******************************************************************
00010   000100 ENVIRONMENT DIVISION.
00011   000110 DATA DIVISION.
00012   000120 WORKING-STORAGE SECTION.
00013   000130 01  FILLER PIC X(32)  VALUE '***** START TESTDYNA WKSTG *****'.
00014   000140 01  WS-MODULE-BLK-1.
00015   000150     05  WS-MODULE-NAME1     PIC X(8)   VALUE 'TESTDYN1'.
00016   000160     05  WS-MODULE-ADDR      PIC X(4)   VALUE LOW-VALUES.
00017   000170     05  WS-CALL-MODE1       PIC X      VALUE 'K'.
00018   000180     05  FILLER              PIC XXX    VALUE LOW-VALUES.
00019   000190 01  WS-MODULE-BLK-2.
00020   000200     05  WS-MODULE-NAME2     PIC X(8)   VALUE 'TESTDYN1'.
00021   000210     05  WS-MODULE-ADDR      PIC X(4)   VALUE LOW-VALUES.
00022   000220     05  WS-CALL-MODE2       PIC X      VALUE 'R'.
00023   000230     05  FILLER              PIC XXX    VALUE LOW-VALUES.
00024   000240 01  WS-PARM-1.
00025   000250     05  WS-COUNTER          PIC 9(5)   VALUE ZEROS.
00026   000260     05  WS-SUB              PIC 9(5)   VALUE ZEROS.
00027   000270 01  FILLER PIC X(32)  VALUE '****** END TESTDYNA WKSTG ******'.
00028   000280 PROCEDURE DIVISION.
00029   000290 START-HERE.
00030   000300     DISPLAY 'STARTING TESTDYNA WITH DEFAULT K MODE.'.
00031   000310
00032   000320     PERFORM DYNA-CALL   10 TIMES.
00033   000330     PERFORM DYNA-CALL-R 10 TIMES.
00034   000340 E-O-J.
00035   000350     DISPLAY 'TESTDYNA ENDING'.
00036   000360
00037   000370     MOVE ZERO TO RETURN-CODE.
00038   000380     STOP RUN.
00039   000390
00040   000400 DYNA-CALL.
00041   000410
00042   000420     DISPLAY 'CALLING ' WS-MODULE-NAME1 ' USING ' WS-CALL-MODE1.
00043   000430     CALL 'DYNALOAD' USING WS-MODULE-BLK-1
00044   000440                           WS-PARM-1.
00045   000450
00046   000460     DISPLAY 'RETURNED FROM ' WS-MODULE-NAME1
00047   000470             ',WS-CALL-MODE = ' WS-CALL-MODE1
00048   000480             ',WS-COUNTER = ' WS-COUNTER
00049   000490             ',WS-SUB = ' WS-SUB.
00050   000500
00051   000510 DYNA-CALL-R.
00052   000520
00053   000530     DISPLAY 'CALLING ' WS-MODULE-NAME2 ' USING ' WS-CALL-MODE2.
00054   000540     CALL 'DYNALOAD' USING WS-MODULE-BLK-2
   2
00055   000550                           WS-PARM-1.
00056   000560
00057   000570     DISPLAY 'RETURNED FROM ' WS-MODULE-NAME2
00058   000580             ',WS-CALL-MODE = ' WS-CALL-MODE2
00059   000590             ',WS-COUNTER = ' WS-COUNTER
00060   000600             ',WS-SUB = ' WS-SUB.
   3

                                                  CONDENSED LISTING

 30      DISPLAY    00038E                    32      PERFORM    0003A2                    33      PERFORM    0003D4
 35      DISPLAY    000406                    37      MOVE       00041A                    38      STOP       000420
 42      DISPLAY    000426                    43      CALL       000458                    46      DISPLAY    00047A
 53      DISPLAY    0004DA                    54      CALL       00050C                    57      DISPLAY    00052E



*STATISTICS*     SOURCE RECORDS =    60     DATA DIVISION STATEMENTS =    15     PROCEDURE DIVISION STATEMENTS =    12
*OPTIONS IN EFFECT*     SIZE = 2097152  BUF = 1048576  LINECNT = 57  SPACE1, FLAGW,   SEQ,   SOURCE
*OPTIONS IN EFFECT*     NODMAP, NOPMAP,   CLIST,   SUPMAP, NOXREF,   LOAD, NODECK, APOST, NOTRUNC, NOLIB,   VERB
*OPTIONS IN EFFECT*       ZWB

 F64-LEVEL LINKAGE EDITOR OPTIONS SPECIFIED LIST,XREF,LET,INVALID
          DEFAULT OPTION(S) USED -  SIZE=(98304,55296)

                                                CROSS REFERENCE TABLE

  CONTROL SECTION                       ENTRY
    NAME    ORIGIN  LENGTH                NAME   LOCATION     NAME   LOCATION     NAME   LOCATION     NAME   LOCATION
  TESTDYNA      00     640
  DYNALOAD*    640     12C
  ILBODSP0*    770     700
  ILBOSTP0*    E70      35
                                        ILBOSTP1     E86

  LOCATION  REFERS TO SYMBOL  IN CONTROL SECTION             LOCATION  REFERS TO SYMBOL  IN CONTROL SECTION
      2E0            ILBOSTP0        ILBOSTP0                     2E4            ILBODSP0        ILBODSP0
      2E8            ILBOSTP1        ILBOSTP0                     2EC            DYNALOAD        DYNALOAD

 ENTRY ADDRESS       00
 TOTAL LENGTH       EA8
****TESTDYNA  DOES NOT EXIST BUT HAS BEEN ADDED TO DATA SET
AUTHORIZATION CODE IS         0.

  CB545 V2 LVL78 01MAY72                 IBM OS AMERICAN NATIONAL STANDARD COBOL                       DATE JAN 15,1907

   1
00001   000010 ID DIVISION.
00002   000020 PROGRAM-ID.  TESTDYN1.
00003   000030******************************************************************
00004   000040*
00005   000050*  TESTDYN1 - TEST STUB FOR THE DYNALOAD MODULE
00006   000060*        THIS MODULE TESTS/DEMONSTRATES THE DYNAMIC LOADING OF
00007   000070*        SUBROUTINES.
00008   000080*
00009   000090******************************************************************
00010   000100 ENVIRONMENT DIVISION.
00011   000110 DATA DIVISION.
00012   000120 WORKING-STORAGE SECTION.
00013   000130 01  WS-COUNTER              PIC 9(5)  VALUE ZERO.
00014   000140 LINKAGE SECTION.
00015   000150 01  LS-PARM-1.
00016   000160     05  LS-COUNTER          PIC 9(5).
00017   000170     05  LS-SUB              PIC 9(5).
00018   000180 PROCEDURE DIVISION USING LS-PARM-1.
00019   000190 START-HERE.
00020   000200     DISPLAY 'STARTING TESTDYN1.'.
00021   000210     ADD 1 TO LS-COUNTER.
00022   000220     ADD 1 TO WS-COUNTER.
00023   000230     MOVE  WS-COUNTER   TO  LS-SUB.
00024   000240     DISPLAY 'RETURNING WS-COUNTER = ' LS-COUNTER
00025   000250             ',WS-SUB = ' LS-SUB.
00026   000260     MOVE ZERO TO RETURN-CODE.
00027   000270     GOBACK.
   2

                                                  CONDENSED LISTING

 18      ENTRY      0002AE                    20      DISPLAY    0002C0                    21      ADD        0002D4
 22      ADD        0002EE                    23      MOVE       000304                    24      DISPLAY    00030E
 26      MOVE       000340                    27      GOBACK     000346



*STATISTICS*     SOURCE RECORDS =    27     DATA DIVISION STATEMENTS =     4     PROCEDURE DIVISION STATEMENTS =     7
*OPTIONS IN EFFECT*     SIZE = 2097152  BUF = 1048576  LINECNT = 57  SPACE1, FLAGW,   SEQ,   SOURCE
*OPTIONS IN EFFECT*     NODMAP, NOPMAP,   CLIST,   SUPMAP, NOXREF,   LOAD, NODECK, APOST, NOTRUNC, NOLIB,   VERB
*OPTIONS IN EFFECT*       ZWB

 F64-LEVEL LINKAGE EDITOR OPTIONS SPECIFIED LIST,XREF,LET,INVALID
          DEFAULT OPTION(S) USED -  SIZE=(98304,55296)

                                                CROSS REFERENCE TABLE

  CONTROL SECTION                       ENTRY
    NAME    ORIGIN  LENGTH                NAME   LOCATION     NAME   LOCATION     NAME   LOCATION     NAME   LOCATION
  TESTDYN1      00     3F2
  ILBODSP0*    3F8     700
  ILBOSTP0*    AF8      35
                                        ILBOSTP1     B0E

  LOCATION  REFERS TO SYMBOL  IN CONTROL SECTION             LOCATION  REFERS TO SYMBOL  IN CONTROL SECTION
      268            ILBOSTP0        ILBOSTP0                     26C            ILBODSP0        ILBODSP0
      270            ILBOSTP1        ILBOSTP0
 ENTRY ADDRESS       00
 TOTAL LENGTH       B30
****TESTDYN1  DOES NOT EXIST BUT HAS BEEN ADDED TO DATA SET
AUTHORIZATION CODE IS         0.

                        HH        HH  EEEEEEEEEEEE  RRRRRRRRRRR    CCCCCCCCCC     00000000         11        IIIIIIIIII
                       HH        HH  EEEEEEEEEEEE  RRRRRRRRRRRR  CCCCCCCCCCCC   0000000000       111        IIIIIIIIII
                      HH        HH  EE            RR        RR  CC        CC  00      0000     1111            II
                     HH        HH  EE            RR        RR  CC            00     00 00       11            II
                    HH        HH  EE            RR        RR  CC            00    00  00       11            II
                   HHHHHHHHHHHH  EEEEEEEE      RRRRRRRRRRRR  CC            00   00   00       11            II
                  HHHHHHHHHHHH  EEEEEEEE      RRRRRRRRRRR   CC            00  00    00       11            II
                 HH        HH  EE            RR    RR      CC            00 00     00       11            II
                HH        HH  EE            RR     RR     CC            0000      00       11            II
               HH        HH  EE            RR      RR    CC        CC  000       00       11            II
              HH        HH  EEEEEEEEEEEE  RR       RR   CCCCCCCCCCCC   0000000000    1111111111    IIIIIIIIII
             HH        HH  EEEEEEEEEEEE  RR        RR   CCCCCCCCCC     00000000     1111111111    IIIIIIIIII

                    JJJJJJJJJJ       11        9999999999   777777777777                               AAAAAAAAAA
                    JJJJJJJJJJ      111       999999999999  77777777777                               AAAAAAAAAAAA
                        JJ         1111       99        99  77      77                                AA        AA
                        JJ           11       99        99         77                                 AA        AA
                        JJ           11       99        99        77                                  AA        AA
                        JJ           11       999999999999       77                                   AAAAAAAAAAAA
                        JJ           11       999999999999       77                                   AAAAAAAAAAAA
                        JJ           11                 99       77                                   AA        AA
                  JJ    JJ           11                 99       77                                   AA        AA
                  JJ    JJ           11       99        99       77                                   AA        AA
                  JJJJJJJJ       1111111111   999999999999       77                                   AA        AA
                   JJJJJJ        1111111111    9999999999        77                                   AA        AA

****A   END   JOB  197  HERC01I                         ROOM        2.13.18 AM 15 JAN  7  PRINTER1  SYS BSP1  JOB  197   END   A****
****A   END   JOB  197  HERC01I                         ROOM        2.13.18 AM 15 JAN  7  PRINTER1  SYS BSP1  JOB  197   END   A****
****A   END   JOB  197  HERC01I                         ROOM        2.13.18 AM 15 JAN  7  PRINTER1  SYS BSP1  JOB  197   END   A****
****A   END   JOB  197  HERC01I                         ROOM        2.13.18 AM 15 JAN  7  PRINTER1  SYS BSP1  JOB  197   END   A****
